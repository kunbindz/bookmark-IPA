{"version":3,"sources":["components/UI/style.js","../node_modules/@material-ui/icons/Loop.js","components/UI/InfiniteScroll/index.js","components/DynoDictionary/Skeleton.js","apis/sentenceApi.js","constant/sentence-topics.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","../node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js","components/CommunicationPhrase/Item/style.js","components/CommunicationPhrase/Item/index.js","components/CommunicationPhrase/SentenceTopicModal/style.js","components/CommunicationPhrase/SentenceTopicModal/index.js","components/CommunicationPhrase/SettingModal.js","components/CommunicationPhrase/style.js","components/CommunicationPhrase/index.js","components/CommunicationPhrase/data.js","pages/CommunicationPhrase.js"],"names":["gameBoxStyle","theme","root","height","display","gridTemplateColumns","gridTemplateRows","gridRowGap","breakpoints","up","pointerEvents","summary","margin","fontSize","fontWeight","color","padding","summaryIcon","dictionaryRoot","marginTop","width","background","borderRadius","contentWrap","listWrap","backgroundColor","border","list","overflow","listItem","skeleton","dialogMUIRoot","dialogPaper","title","content","breakLine","borderColor","formStyle","boxShadow","marginBottom","labelIcon","forgotPw","opacity","textAlign","icon","cursor","visiblePw","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","InfiniteScroll","props","className","onTouchAnchor","threshold","observer","useRef","IntersectionObserver","entries","isIntersecting","useState","element","setElement","useEffect","currentElement","currentObserver","current","observe","unobserve","ref","children","defaultProps","DynoDictionarySkeleton","Array","fill","map","_","index","animation","variant","URL","sentenceApi","postContributeSentence","sentence","mean","note","topics","axiosClient","post","getTotalSentences","get","params","JSON","stringify","getSentenceList","page","perPage","SENTENCE_TOPICS","key","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","_props$align","align","classes","_props$color","component","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","_props$variantMapping","variantMapping","other","_objectWithoutProperties","Component","_extends","clsx","concat","capitalize","withStyles","typography","caption","button","overline","srOnly","position","alignLeft","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","name","DialogTitle","_props$disableTypogra","disableTypography","flex","makeStyles","borderBottom","maxWidth","phrase","CommunicationPhraseItem","useStyle","Speaker","SentenceTopicModal","onClose","onSelect","open","topicRef","Dialog","paper","keepMounted","DialogContent","dividers","topic","Tag","id","onChange","idTopic","addOrDelItemInArray","DialogActions","Button","onClick","SentenceTopicSettingModal","onSelectTopic","showTopicModal","setShowTopicModal","CommunicationPhrase","isFirstLoad","loading","more","onLoadData","length","item","CommunicationPhraseData","setPage","setLoading","setList","setMore","setIsFirstLoad","topicList","setTopicList","totalPage","isSub","a","apiRes","status","data","total","Math","ceil","sentenceList","v","isArray","equalArray","CommunicationPhrasePage","useTitle"],"mappings":"2PAAaA,EAAe,SAACC,GAAD,YAAY,CACtCC,MAAI,GACFC,OAAQ,OACRC,QAAS,OACTC,oBAAqB,MACrBC,iBAAkB,eAClBC,WAAY,UALV,cAODN,EAAMO,YAAYC,GAAG,MAAQ,CAC5BN,OAAQ,MACRI,WAAY,WATZ,cAYF,cAAe,CACbG,cAAe,SAbf,GAiBJC,QAAS,CACPC,OAAQ,WACR,QAAS,CACPC,SAAU,SACVC,WAAY,IACZC,MAAO,sBAGT,MAAO,CACLC,QAAS,WACTH,SAAU,SAIdI,YAAa,CACXJ,SAAU,SACVD,OAAQ,cAICM,EAAiB,iBAAO,CACnChB,KAAM,CACJiB,UAAW,SAEX,wBAAyB,CACvBC,MAAO,OAGT,8BAA+B,CAC7BC,WAAY,QAGd,8BAA+B,CAC7BC,aAAc,SAIlBC,YAAa,CACXJ,UAAW,UAGbK,SAAU,CACRR,QAAS,gBACTS,gBAAiB,yBACjBH,aAAc,uBACdI,OAAQ,iCAGVC,KAAM,CACJX,QAAS,WACTb,OAAQ,sBACRyB,SAAU,QAGZC,SAAU,CACRjB,OAAQ,YAGVkB,SAAU,CACR3B,OAAQ,OAER,QAAS,CACPS,OAAQ,WACRT,OAAQ,yBAKD4B,EAAgB,iBAAO,CAClCC,YAAa,CACXP,gBAAiB,uBAGnBQ,MAAO,CACL,QAAS,CACPlB,MAAO,uBAIXmB,QAAS,CACP,MAAO,CACLnB,MAAO,sBAIXoB,UAAW,CACTC,YAAa,yBAIJC,EAAY,iBAAO,CAC9BnC,KAAM,CACJc,QAAS,gBACTsB,UAAW,oBACXhB,aAAc,uBACdF,MAAO,QACPK,gBAAiB,sBAEjB,QAAS,CACPN,UAAW,SACXoB,aAAc,WAIlBN,MAAO,CACLpB,SAAU,SACVE,MAAO,qBAGTyB,UAAW,CACT3B,SAAU,SACVE,MAAO,qBAGT0B,SAAU,CACR1B,MAAO,qBACP2B,QAAS,IACT5B,WAAY,IACZD,SAAU,SACV8B,UAAW,QAEX,UAAW,CACTD,QAAS,IAIbE,KAAM,CACJ/B,SAAU,SACVE,MAAO,cACP8B,OAAQ,WAGVC,UAAW,CACT/B,MAAO,2B,iCCrJX,IAAIgC,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAQN,EAAwBD,EAAQ,IAIxCQ,GAAW,EAFMT,EAAuBC,EAAQ,KAElBM,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,oOACD,QAEJN,EAAQE,QAAUE,G,2DChBlB,SAASG,EAAeC,GACtB,IAAQC,EAAwCD,EAAxCC,UAAWC,EAA6BF,EAA7BE,cAAeC,EAAcH,EAAdG,UAC5BC,EAAWC,iBACf,IAAIC,sBACF,SAACC,GACeA,EAAQ,GACZC,gBACRN,MAGJ,CAAEC,eAGN,EAA8BM,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,qBAAU,WACR,IAAMC,EAAiBH,EACjBI,EAAkBV,EAASW,QAMjC,OAJIF,GACFC,EAAgBE,QAAQH,GAGnB,WACDA,GACFC,EAAgBG,UAAUJ,MAG7B,CAACH,IAGF,qBAAKT,UAAWA,EAAWiB,IAAKP,EAAhC,SACGX,EAAMmB,WAYbpB,EAAeqB,aAAe,CAC5BnB,UAAW,GACXC,cAAe,aACfC,UAAW,IAGEJ,O,iCCpDf,2BAiBesB,IAdf,YAAgD,IAAdpB,EAAa,EAAbA,UAChC,OACE,qBAAKA,UAAWA,EAAhB,SACG,IAAIqB,MAAM,IAAIC,KAAK,GAAGC,KAAI,SAACC,EAAGC,GAAJ,OACzB,cAAC,IAAD,CAAsBC,UAAU,OAAOC,QAAQ,QAAhCF,U,iCCRvB,YAEMG,EAAM,YAENC,EAAc,CAClBC,uBAAwB,SAACC,EAAUC,EAAMC,EAAMC,GAC7C,OAAOC,IAAYC,KAAZ,UAAoBR,EAApB,4BAAmD,CACxDG,WACAC,OACAC,OACAC,YAIJG,kBAAmB,WAAkB,IAAjBH,EAAgB,uDAAP,GAC3B,OAAOC,IAAYG,IAAZ,UAAmBV,EAAnB,UAAgC,CACrCW,OAAQ,CAAEL,OAAQM,KAAKC,UAAUP,OAIrCQ,gBAAiB,WAA0C,IAAzCC,EAAwC,uDAAjC,EAAGC,EAA8B,uDAApB,GAAIV,EAAgB,uDAAP,GACjD,OAAOC,IAAYG,IAAZ,UAAmBV,EAAnB,SAA+B,CACpCW,OAAQ,CACNI,OACAC,UACAV,OAAQM,KAAKC,UAAUP,QAMhBL,O,iCC/Bf,kCAAO,IAAMgB,EAAkB,CAC7B,CACEC,IAAK,IACL1E,MAAO,qCAET,CACE0E,IAAK,IACL1E,MAAO,oBAET,CACE0E,IAAK,IACL1E,MAAO,mDAET,CACE0E,IAAK,IACL1E,MAAO,oCAET,CACE0E,IAAK,IACL1E,MAAO,gCAET,CACE0E,IAAK,IACL1E,MAAO,oCAET,CACE0E,IAAK,IACL1E,MAAO,mDAET,CACE0E,IAAK,IACL1E,MAAO,2BAET,CACE0E,IAAK,IACL1E,MAAO,qBAET,CACE0E,IAAK,IACL1E,MAAO,qBAET,CACE0E,IAAK,KACL1E,MAAO,oBAET,CACE0E,IAAK,KACL1E,MAAO,gBAET,CACE0E,IAAK,KACL1E,MAAO,mCAET,CACE0E,IAAK,KACL1E,MAAO,0CAET,CACE0E,IAAK,KACL1E,MAAO,6CAET,CACE0E,IAAK,KACL1E,MAAO,oBAET,CACE0E,IAAK,KACL1E,MAAO,uBAET,CACE0E,IAAK,KACL1E,MAAO,a,sFCoEP2E,EAAwB,CAC1BC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,UAAW,KACXC,UAAW,KACXC,MAAO,IACPC,MAAO,KAELC,EAA0BhE,cAAiB,SAAoBK,EAAOkB,GACxE,IAAI0C,EAAe5D,EAAM6D,MACrBA,OAAyB,IAAjBD,EAA0B,UAAYA,EAC9CE,EAAU9D,EAAM8D,QAChB7D,EAAYD,EAAMC,UAClB8D,EAAe/D,EAAM7C,MACrBA,OAAyB,IAAjB4G,EAA0B,UAAYA,EAC9CC,EAAYhE,EAAMgE,UAClBC,EAAiBjE,EAAMxD,QACvBA,OAA6B,IAAnByH,EAA4B,UAAYA,EAClDC,EAAsBlE,EAAMmE,aAC5BA,OAAuC,IAAxBD,GAAyCA,EACxDE,EAAgBpE,EAAMqE,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAmBtE,EAAMuE,UACzBA,OAAiC,IAArBD,GAAsCA,EAClDE,EAAiBxE,EAAM4B,QACvBA,OAA6B,IAAnB4C,EAA4B,QAAUA,EAChDC,EAAwBzE,EAAM0E,eAC9BA,OAA2C,IAA1BD,EAAmCzB,EAAwByB,EAC5EE,EAAQC,YAAyB5E,EAAO,CAAC,QAAS,UAAW,YAAa,QAAS,YAAa,UAAW,eAAgB,SAAU,YAAa,UAAW,mBAE7J6E,EAAYb,IAAcO,EAAY,IAAMG,EAAe9C,IAAYoB,EAAsBpB,KAAa,OAC9G,OAAoBjC,gBAAoBkF,EAAWC,YAAS,CAC1D7E,UAAW8E,YAAKjB,EAAQxH,KAAM2D,EAAuB,YAAZ2B,GAAyBkC,EAAQlC,GAAoB,YAAVzE,GAAuB2G,EAAQ,QAAQkB,OAAOC,YAAW9H,KAAUkH,GAAUP,EAAQO,OAAQF,GAAgBL,EAAQK,aAAcI,GAAaT,EAAQS,UAAqB,YAAVV,GAAuBC,EAAQ,QAAQkB,OAAOC,YAAWpB,KAAsB,YAAZrH,GAAyBsH,EAAQ,UAAUkB,OAAOC,YAAWzI,MACvX0E,IAAKA,GACJyD,OA0EUO,eApPK,SAAgB7I,GAClC,MAAO,CAELC,KAAM,CACJU,OAAQ,GAIV0G,MAAOrH,EAAM8I,WAAWzB,MAGxBD,MAAOpH,EAAM8I,WAAW1B,MAGxB2B,QAAS/I,EAAM8I,WAAWC,QAG1BC,OAAQhJ,EAAM8I,WAAWE,OAGzBpC,GAAI5G,EAAM8I,WAAWlC,GAGrBC,GAAI7G,EAAM8I,WAAWjC,GAGrBC,GAAI9G,EAAM8I,WAAWhC,GAGrBC,GAAI/G,EAAM8I,WAAW/B,GAGrBC,GAAIhH,EAAM8I,WAAW9B,GAGrBC,GAAIjH,EAAM8I,WAAW7B,GAGrBC,UAAWlH,EAAM8I,WAAW5B,UAG5BC,UAAWnH,EAAM8I,WAAW3B,UAG5B8B,SAAUjJ,EAAM8I,WAAWG,SAG3BC,OAAQ,CACNC,SAAU,WACVjJ,OAAQ,EACRiB,MAAO,EACPQ,SAAU,UAIZyH,UAAW,CACT1G,UAAW,QAIb2G,YAAa,CACX3G,UAAW,UAIb4G,WAAY,CACV5G,UAAW,SAIb6G,aAAc,CACZ7G,UAAW,WAIbsF,OAAQ,CACNrG,SAAU,SACV6H,aAAc,WACdC,WAAY,UAId3B,aAAc,CACZxF,aAAc,UAIhB4F,UAAW,CACT5F,aAAc,IAIhBoH,aAAc,CACZ5I,MAAO,WAIT6I,aAAc,CACZ7I,MAAOd,EAAM4J,QAAQC,QAAQC,MAI/BC,eAAgB,CACdjJ,MAAOd,EAAM4J,QAAQI,UAAUF,MAIjCG,iBAAkB,CAChBnJ,MAAOd,EAAM4J,QAAQM,KAAKL,SAI5BM,mBAAoB,CAClBrJ,MAAOd,EAAM4J,QAAQM,KAAKF,WAI5BI,WAAY,CACVtJ,MAAOd,EAAM4J,QAAQS,MAAMP,MAI7BQ,cAAe,CACbnK,QAAS,UAIXoK,aAAc,CACZpK,QAAS,YAoHmB,CAChCqK,KAAM,iBADO3B,CAEZvB,GC9OCmD,EAA2BnH,cAAiB,SAAqBK,EAAOkB,GAC1E,IAAIC,EAAWnB,EAAMmB,SACjB2C,EAAU9D,EAAM8D,QAChB7D,EAAYD,EAAMC,UAClB8G,EAAwB/G,EAAMgH,kBAC9BA,OAA8C,IAA1BD,GAA2CA,EAC/DpC,EAAQC,YAAyB5E,EAAO,CAAC,WAAY,UAAW,YAAa,sBAEjF,OAAoBL,gBAAoB,MAAOmF,YAAS,CACtD7E,UAAW8E,YAAKjB,EAAQxH,KAAM2D,GAC9BiB,IAAKA,GACJyD,GAAQqC,EAAoB7F,EAAwBxB,gBAAoBgE,EAAY,CACrFK,UAAW,KACXpC,QAAS,MACRT,OA8BU+D,gBApDK,CAElB5I,KAAM,CACJU,OAAQ,EACRI,QAAS,YACT6J,KAAM,aA+CwB,CAChCJ,KAAM,kBADO3B,CAEZ4B,I,0KC3DYI,eAAW,iBAAO,CAC/B5K,KAAM,CACJc,QAAS,WACT+J,aAAc,iCAGhBlF,KAAM,CACJhF,SAAU,SACV0B,aAAc,SACdxB,MAAO,oBACPiK,SAAU,MACVrI,UAAW,WAGbsI,OAAQ,CACNpK,SAAU,SACVE,MAAO,uBACPiK,SAAU,MACVrI,UAAW,e,OCff,SAASuI,EAAT,GAAsD,IAAnBrF,EAAkB,EAAlBA,KAAMD,EAAY,EAAZA,SACjC8B,EAAUyD,IAChB,OACE,sBAAKtH,UAAS,UAAK6D,EAAQxH,KAAb,wBAAd,UACE,sBAAK2D,UAAU,aAAf,UACE,qBAAKA,UAAW6D,EAAQ7B,KAAxB,SAA+BA,IAC/B,qBAAKhC,UAAW6D,EAAQuD,OAAxB,SAAiCrF,OAGnC,cAACwF,EAAA,EAAD,CAASjB,KAAMvE,OAUrBsF,EAAwBlG,aAAe,CACrCa,KAAM,GACND,SAAU,IAGGsF,Q,yFC1BAJ,eAAW,SAAC7K,GAAD,sBACrB8B,YAAc9B,OCQnB,SAASoL,EAAT,GAA0D,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,KACzC9D,EAAUyD,IACVM,EAAWxH,iBAAO,IAExB,OACE,eAACyH,EAAA,EAAD,CACEhE,QAAS,CAAEiE,MAAOjE,EAAQ1F,aAC1BwJ,KAAMA,EACNI,aAAW,EACXZ,SAAS,KACTM,QAASA,EALX,UAME,cAACZ,EAAA,EAAD,CAAa7G,UAAW6D,EAAQzF,MAAhC,6CAEA,cAAC4J,EAAA,EAAD,CAAeC,UAAQ,EAACpE,QAAS,CAAEoE,SAAUpE,EAAQvF,WAArD,SACE,oBAAI0B,UAAU,mBAAd,SACG6C,IAAgBtB,KAAI,SAAC2G,EAAOzG,GAAR,OACnB,qBAAKzB,UAAU,MAAf,SACE,cAACmI,EAAA,EAAD,CACE/J,MAAO8J,EAAM9J,MACbgK,GAAIF,EAAMpF,IACVuF,SAAU,SAACC,GAAD,OACRC,YAAoBX,EAAS9G,QAASwH,OALlB7G,UAahC,eAAC+G,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,QAASjB,EAASzH,UAAU,kBAApC,0BAGA,cAACyI,EAAA,EAAD,CACEC,QAAS,kBAAMhB,EAASE,EAAS9G,UACjCd,UAAU,oBAFZ,sBAgBRwH,EAAmBrG,aAAe,CAChCwG,MAAM,EACNF,QAAS,aACTC,SAAU,cAGGF,QC9Df,SAASmB,EAAT,GAAuD,IAAlBC,EAAiB,EAAjBA,cACnC,EAA4CpI,oBAAS,GAArD,mBAAOqI,EAAP,KAAuBC,EAAvB,KAEA,OACE,qCACE,cAAC,IAAD,CACE9I,UAAU,oBACV0I,QAAS,kBAAMI,GAAkB,MAInC,cAAC,EAAD,CACErB,QAAS,kBAAMqB,GAAkB,IACjCnB,KAAMkB,EACNnB,SAAU,SAACxF,GACT0G,EAAc1G,GACd4G,GAAkB,SAW5BH,EAA0BxH,aAAe,CACvCyH,cAAe,cAGFD,QCjCA1B,eAAW,SAAC7K,GAAD,sBACrBiB,YAAejB,OCKpB,SAAS2M,EAAT,GAOI,IANFC,EAMC,EANDA,YACAC,EAKC,EALDA,QACAC,EAIC,EAJDA,KACApL,EAGC,EAHDA,KACAqL,EAEC,EAFDA,WACAP,EACC,EADDA,cAEM/E,EAAUyD,IAEhB,OACE,sBAAKtH,UAAS,UAAK6D,EAAQxH,KAAb,mBAAd,UAEE,sBAAK2D,UAAU,sBAAf,UACE,oBAAIA,UAAU,aAAd,mDACA,cAAC,EAAD,CAA2B4I,cAAeA,OAE5C,qBAAK5I,UAAU,eAGf,qBAAKA,UAAW6D,EAAQnG,YAAxB,SACE,qBAAKsC,UAAS,UAAK6D,EAAQlG,SAAb,UAAd,SACE,oBAAIyK,GAAG,eAAepI,UAAS,UAAK6D,EAAQ/F,KAAb,mBAA/B,SACE,mCACGkL,EACC,cAAC,IAAD,CAAwBhJ,UAAW6D,EAAQ5F,WAE3C,mCACGH,GAAQA,EAAKsL,OAAS,EACrB,qCAEGtL,EAAKyD,KAAI,SAAC8H,EAAM5H,GAAP,OACR,oBAAIzB,UAAW6D,EAAQ7F,SAAvB,SACE,cAAC,EAAD,eAA6BqL,KADO5H,OAMtCwH,GAAWC,GACX,cAACpJ,EAAA,EAAD,CACEG,cAAekJ,EACfjJ,UAAW,EAFb,SAGE,qBAAKF,UAAU,iBAAf,SACE,cAAC,IAAD,CAAUA,UAAU,oBAO5B,oBAAIA,UAAU,4CAAd,yGAuBpB+I,EAAoB5H,aAAe,CACjC+H,MAAM,EACND,SAAS,EACTD,aAAa,EACblL,KAAM,GACNqL,WAAY,aACZP,cAAe,cAGFG,QCGAO,MAvFf,WACE,MAAwB9I,mBAAS,GAAjC,mBAAOmC,EAAP,KAAa4G,EAAb,KACA,EAA8B/I,oBAAS,GAAvC,mBAAOyI,EAAP,KAAgBO,EAAhB,KACA,EAAwBhJ,mBAAS,IAAjC,mBAAO1C,EAAP,KAAa2L,EAAb,KACA,EAAwBjJ,oBAAS,GAAjC,mBAAO0I,EAAP,KAAaQ,EAAb,KACA,EAAsClJ,oBAAS,GAA/C,mBAAOwI,EAAP,KAAoBW,EAApB,KACA,EAAkCnJ,mBAAS,IAA3C,mBAAOoJ,EAAP,KAAkBC,EAAlB,KACMC,EAAY1J,iBAAO,GAoEzB,OA7CAO,qBAAU,WACR,IAAIoJ,GAAQ,EAaZ,OAXA,sBAAC,gCAAAC,EAAA,+EAEwBnI,IAAYQ,kBAAkBuH,GAFtD,OAIyB,OAFhBK,EAFT,QAIcC,QAAkBH,IAAQ,EACbE,EAAOE,KAArBC,aAD0B,MAClB,EADkB,EAElCN,EAAUhJ,QAAUuJ,KAAKC,KAAKF,EAzCxB,KAmCX,sGAAD,GAWO,kBAAOL,GAAQ,KACrB,CAACH,IAGJjJ,qBAAU,WACR,IAAIoJ,GAAQ,EAuBZ,OArBA,sBAAC,gCAAAC,EAAA,sEAEGR,GAAW,GAFd,SAGwB3H,IAAYa,gBAC/BC,EAzDM,GA2DNiH,GANL,OAQyB,OALhBK,EAHT,QAQcC,QAAkBH,IAAQ,EACLE,EAAOE,KAA7BI,oBAD0B,MACX,GADW,EAElCd,EAAQ,GAAD,mBAAK3L,GAAL,YAAcyM,MAV1B,yEAcOR,IACFP,GAAW,GACXR,GAAeW,GAAe,IAhBnC,2EAAD,GAqBO,kBAAOI,GAAQ,KACrB,CAACpH,EAAMiH,IAGR,cAAC,EAAD,CACE9L,KAAMA,EACNkL,YAAaA,EACbC,QAASA,EACTC,KAAMA,EACNC,WAxEa,WACXxG,EAAOmH,EAAUhJ,QACnByI,EAAQ5G,EAAO,GAEf+G,GAAQ,IAqERd,cAAe,SAAC4B,GAjEE,IAACtI,KAiEiBsI,IAhEtBnJ,MAAMoJ,QAAQvI,KAAWwI,YAAWxI,EAAQ0H,KAI5DL,EAAQ,GACRG,GAAQ,GACRD,EAAQ,IACRI,EAAa,YAAI3H,IACjB4H,EAAUhJ,QAAU,O,QCnBT6J,UAVf,WAGE,OAFAC,YAAS,yCAGP,qBAAK5K,UAAU,YAAf,SACE,cAAC,EAAD","file":"static/js/13.0f9c93d2.chunk.js","sourcesContent":["export const gameBoxStyle = (theme) => ({\r\n  root: {\r\n    height: '100%',\r\n    display: 'grid',\r\n    gridTemplateColumns: '1fr',\r\n    gridTemplateRows: '2fr 1fr 17fr',\r\n    gridRowGap: '0.8rem',\r\n\r\n    [theme.breakpoints.up('sm')]: {\r\n      height: '85%',\r\n      gridRowGap: '1.2rem',\r\n    },\r\n\r\n    '& .disabled': {\r\n      pointerEvents: 'none',\r\n    },\r\n  },\r\n\r\n  summary: {\r\n    margin: '1.4rem 0',\r\n    '& > *': {\r\n      fontSize: '1.6rem',\r\n      fontWeight: 400,\r\n      color: 'var(--label-color)',\r\n    },\r\n\r\n    '& b': {\r\n      padding: '0 0.4rem',\r\n      fontSize: '2rem',\r\n    },\r\n  },\r\n\r\n  summaryIcon: {\r\n    fontSize: '2.4rem',\r\n    margin: '0 0.4rem',\r\n  },\r\n});\r\n\r\nexport const dictionaryRoot = () => ({\r\n  root: {\r\n    marginTop: '3.2rem',\r\n\r\n    '& ::-webkit-scrollbar': {\r\n      width: '2px',\r\n    },\r\n\r\n    '& ::-webkit-scrollbar-track': {\r\n      background: 'none',\r\n    },\r\n\r\n    '& ::-webkit-scrollbar-thumb': {\r\n      borderRadius: '25px',\r\n    },\r\n  },\r\n\r\n  contentWrap: {\r\n    marginTop: '2.4rem',\r\n  },\r\n\r\n  listWrap: {\r\n    padding: '1.2rem 0.4rem',\r\n    backgroundColor: 'var(--bg-color-accent)',\r\n    borderRadius: 'var(--border-radius)',\r\n    border: 'solid 1px var(--border-color)',\r\n  },\r\n\r\n  list: {\r\n    padding: '0 2.4rem',\r\n    height: 'calc(100vh - 24rem)',\r\n    overflow: 'auto',\r\n  },\r\n\r\n  listItem: {\r\n    margin: '0.6rem 0',\r\n  },\r\n\r\n  skeleton: {\r\n    height: '100%',\r\n\r\n    '& > *': {\r\n      margin: '1.2rem 0',\r\n      height: 'calc(10% - 1.2rem)',\r\n    },\r\n  },\r\n});\r\n\r\nexport const dialogMUIRoot = () => ({\r\n  dialogPaper: {\r\n    backgroundColor: 'var(--bg-color-sec)',\r\n  },\r\n\r\n  title: {\r\n    '& > *': {\r\n      color: 'var(--title-color)',\r\n    },\r\n  },\r\n\r\n  content: {\r\n    '& *': {\r\n      color: 'var(--text-color)',\r\n    },\r\n  },\r\n\r\n  breakLine: {\r\n    borderColor: 'var(--border-color)',\r\n  },\r\n});\r\n\r\nexport const formStyle = () => ({\r\n  root: {\r\n    padding: '2.4rem 3.6rem',\r\n    boxShadow: 'var(--box-shadow)',\r\n    borderRadius: 'var(--border-radius)',\r\n    width: '35rem',\r\n    backgroundColor: 'var(--bg-color-sec)',\r\n\r\n    '& > *': {\r\n      marginTop: '1.2rem',\r\n      marginBottom: '1.2rem',\r\n    },\r\n  },\r\n\r\n  title: {\r\n    fontSize: '2.4rem',\r\n    color: 'var(--text-color)',\r\n  },\r\n\r\n  labelIcon: {\r\n    fontSize: '3.6rem',\r\n    color: 'var(--text-color)',\r\n  },\r\n\r\n  forgotPw: {\r\n    color: 'var(--title-color)',\r\n    opacity: 0.65,\r\n    fontWeight: 500,\r\n    fontSize: '1.4rem',\r\n    textAlign: 'right',\r\n\r\n    '&:hover': {\r\n      opacity: 1,\r\n    },\r\n  },\r\n\r\n  icon: {\r\n    fontSize: '1.8rem',\r\n    color: 'var(--grey)',\r\n    cursor: 'pointer',\r\n  },\r\n\r\n  visiblePw: {\r\n    color: 'var(--primary-color)',\r\n  },\r\n});\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Loop');\n\nexports.default = _default;","import PropTypes from 'prop-types';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\n\r\nfunction InfiniteScroll(props) {\r\n  const { className, onTouchAnchor, threshold } = props;\r\n  const observer = useRef(\r\n    new IntersectionObserver(\r\n      (entries) => {\r\n        const first = entries[0];\r\n        if (first.isIntersecting) {\r\n          onTouchAnchor();\r\n        }\r\n      },\r\n      { threshold },\r\n    ),\r\n  );\r\n  const [element, setElement] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const currentElement = element;\r\n    const currentObserver = observer.current;\r\n\r\n    if (currentElement) {\r\n      currentObserver.observe(currentElement);\r\n    }\r\n\r\n    return () => {\r\n      if (currentElement) {\r\n        currentObserver.unobserve(currentElement);\r\n      }\r\n    };\r\n  }, [element]);\r\n\r\n  return (\r\n    <div className={className} ref={setElement}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nInfiniteScroll.propTypes = {\r\n  children: PropTypes.any,\r\n  className: PropTypes.string,\r\n  onTouchAnchor: PropTypes.func,\r\n  threshold: PropTypes.number,\r\n};\r\n\r\nInfiniteScroll.defaultProps = {\r\n  className: '',\r\n  onTouchAnchor: function () {},\r\n  threshold: 0.5,\r\n};\r\n\r\nexport default InfiniteScroll;\r\n","import PropTypes from 'prop-types';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport React from 'react';\r\n\r\nfunction DynoDictionarySkeleton({ className }) {\r\n  return (\r\n    <div className={className}>\r\n      {new Array(10).fill(0).map((_, index) => (\r\n        <Skeleton key={index} animation=\"wave\" variant=\"rect\" />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nDynoDictionarySkeleton.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default DynoDictionarySkeleton;\r\n","import axiosClient from './axiosClient';\r\n\r\nconst URL = '/sentence';\r\n\r\nconst sentenceApi = {\r\n  postContributeSentence: (sentence, mean, note, topics) => {\r\n    return axiosClient.post(`${URL}/contribute/add-sentence`, {\r\n      sentence,\r\n      mean,\r\n      note,\r\n      topics,\r\n    });\r\n  },\r\n\r\n  getTotalSentences: (topics = []) => {\r\n    return axiosClient.get(`${URL}/total`, {\r\n      params: { topics: JSON.stringify(topics) },\r\n    });\r\n  },\r\n\r\n  getSentenceList: (page = 1, perPage = 20, topics = []) => {\r\n    return axiosClient.get(`${URL}/list`, {\r\n      params: {\r\n        page,\r\n        perPage,\r\n        topics: JSON.stringify(topics),\r\n      },\r\n    });\r\n  },\r\n};\r\n\r\nexport default sentenceApi;\r\n","export const SENTENCE_TOPICS = [\r\n  {\r\n    key: '0',\r\n    title: 'Giao tiếp thông dụng',\r\n  },\r\n  {\r\n    key: '1',\r\n    title: 'Chào hỏi',\r\n  },\r\n  {\r\n    key: '2',\r\n    title: 'Du lịch - phương hướng',\r\n  },\r\n  {\r\n    key: '3',\r\n    title: 'Con số - tiền bạc',\r\n  },\r\n  {\r\n    key: '4',\r\n    title: 'Địa điểm',\r\n  },\r\n  {\r\n    key: '5',\r\n    title: 'Thời gian, ngày tháng',\r\n  },\r\n  {\r\n    key: '6',\r\n    title: 'Điện thoại - Internet - Thư',\r\n  },\r\n  {\r\n    key: '7',\r\n    title: 'Chỗ ăn ở',\r\n  },\r\n  {\r\n    key: '8',\r\n    title: 'Ăn uống',\r\n  },\r\n  {\r\n    key: '9',\r\n    title: 'Kết bạn',\r\n  },\r\n  {\r\n    key: '10',\r\n    title: 'Giải trí',\r\n  },\r\n  {\r\n    key: '11',\r\n    title: 'Mua sắm',\r\n  },\r\n  {\r\n    key: '12',\r\n    title: 'Khó khăn giao tiếp',\r\n  },\r\n  {\r\n    key: '13',\r\n    title: 'Khẩn cấp, Sức khoẻ',\r\n  },\r\n  {\r\n    key: '15',\r\n    title: 'Câu hỏi thông thường',\r\n  },\r\n  {\r\n    key: '16',\r\n    title: 'Việc làm',\r\n  },\r\n  {\r\n    key: '17',\r\n    title: 'Thời tiết',\r\n  },\r\n  {\r\n    key: '18',\r\n    title: 'Khác',\r\n  },\r\n];\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(() => ({\r\n  root: {\r\n    padding: '1.2rem 0',\r\n    borderBottom: 'solid 1px var(--border-color)',\r\n  },\r\n\r\n  mean: {\r\n    fontSize: '1.8rem',\r\n    marginBottom: '0.8rem',\r\n    color: 'var(--text-color)',\r\n    maxWidth: '80%',\r\n    textAlign: 'justify',\r\n  },\r\n\r\n  phrase: {\r\n    fontSize: '1.6rem',\r\n    color: 'var(--primary-color)',\r\n    maxWidth: '80%',\r\n    textAlign: 'justify',\r\n  },\r\n}));\r\n","import PropTypes from 'prop-types';\r\nimport Speaker from 'components/UI/Speaker';\r\nimport React from 'react';\r\nimport useStyle from './style';\r\n\r\nfunction CommunicationPhraseItem({ mean, sentence }) {\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={`${classes.root} flex-center-between`}>\r\n      <div className=\"mr-4 w-100\">\r\n        <div className={classes.mean}>{mean}</div>\r\n        <div className={classes.phrase}>{sentence}</div>\r\n      </div>\r\n\r\n      <Speaker text={sentence} />\r\n    </div>\r\n  );\r\n}\r\n\r\nCommunicationPhraseItem.propTypes = {\r\n  mean: PropTypes.string,\r\n  sentence: PropTypes.string,\r\n};\r\n\r\nCommunicationPhraseItem.defaultProps = {\r\n  mean: '',\r\n  sentence: '',\r\n};\r\n\r\nexport default CommunicationPhraseItem;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { dialogMUIRoot } from 'components/UI/style';\r\n\r\nexport default makeStyles((theme) => ({\r\n  ...dialogMUIRoot(theme),\r\n}));\r\n","import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Tag from 'components/UI/Tag';\r\nimport { SENTENCE_TOPICS } from 'constant/sentence-topics';\r\nimport { addOrDelItemInArray } from 'helper';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useRef } from 'react';\r\nimport useStyle from './style';\r\n\r\nfunction SentenceTopicModal({ onClose, onSelect, open }) {\r\n  const classes = useStyle();\r\n  const topicRef = useRef([]);\r\n\r\n  return (\r\n    <Dialog\r\n      classes={{ paper: classes.dialogPaper }}\r\n      open={open}\r\n      keepMounted\r\n      maxWidth=\"md\"\r\n      onClose={onClose}>\r\n      <DialogTitle className={classes.title}>Chọn chủ đề</DialogTitle>\r\n\r\n      <DialogContent dividers classes={{ dividers: classes.breakLine }}>\r\n        <ul className=\"d-flex flex-wrap\">\r\n          {SENTENCE_TOPICS.map((topic, index) => (\r\n            <div className=\"m-2\" key={index}>\r\n              <Tag\r\n                title={topic.title}\r\n                id={topic.key}\r\n                onChange={(idTopic) =>\r\n                  addOrDelItemInArray(topicRef.current, idTopic)\r\n                }\r\n              />\r\n            </div>\r\n          ))}\r\n        </ul>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={onClose} className=\"_btn _btn-stand\">\r\n          Đóng\r\n        </Button>\r\n        <Button\r\n          onClick={() => onSelect(topicRef.current)}\r\n          className=\"_btn _btn-primary\">\r\n          OK\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nSentenceTopicModal.propTypes = {\r\n  open: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  onSelect: PropTypes.func,\r\n};\r\n\r\nSentenceTopicModal.defaultProps = {\r\n  open: false,\r\n  onClose: function () {},\r\n  onSelect: function () {},\r\n};\r\n\r\nexport default SentenceTopicModal;\r\n","import PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport SentenceTopicModal from './SentenceTopicModal';\r\n\r\nfunction SentenceTopicSettingModal({ onSelectTopic }) {\r\n  const [showTopicModal, setShowTopicModal] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <SettingsIcon\r\n        className=\"dyno-setting-icon\"\r\n        onClick={() => setShowTopicModal(true)}\r\n      />\r\n\r\n      {/* sentence topic setting modal */}\r\n      <SentenceTopicModal\r\n        onClose={() => setShowTopicModal(false)}\r\n        open={showTopicModal}\r\n        onSelect={(topics) => {\r\n          onSelectTopic(topics);\r\n          setShowTopicModal(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nSentenceTopicSettingModal.propTypes = {\r\n  onSelectTopic: PropTypes.func,\r\n};\r\n\r\nSentenceTopicSettingModal.defaultProps = {\r\n  onSelectTopic: function () {},\r\n};\r\n\r\nexport default SentenceTopicSettingModal;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { dictionaryRoot } from 'components/UI/style';\r\n\r\nexport default makeStyles((theme) => ({\r\n  ...dictionaryRoot(theme),\r\n}));\r\n","import LoopIcon from '@material-ui/icons/Loop';\r\nimport DynoDictionarySkeleton from 'components/DynoDictionary/Skeleton';\r\nimport InfiniteScroll from 'components/UI/InfiniteScroll';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport CommunicationPhraseItem from './Item';\r\nimport SentenceTopicSettingModal from './SettingModal';\r\nimport useStyle from './style';\r\n\r\nfunction CommunicationPhrase({\r\n  isFirstLoad,\r\n  loading,\r\n  more,\r\n  list,\r\n  onLoadData,\r\n  onSelectTopic,\r\n}) {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <div className={`${classes.root} dyno-container`}>\r\n      {/* title - menu */}\r\n      <div className=\"flex-center-between\">\r\n        <h1 className=\"dyno-title\">1000+ Cụm từ giao tiếp</h1>\r\n        <SentenceTopicSettingModal onSelectTopic={onSelectTopic} />\r\n      </div>\r\n      <div className=\"dyno-break\"></div>\r\n\r\n      {/* list content */}\r\n      <div className={classes.contentWrap}>\r\n        <div className={`${classes.listWrap} w-100`}>\r\n          <ul id=\"dictionaryId\" className={`${classes.list} flex-col w-100`}>\r\n            <>\r\n              {isFirstLoad ? (\r\n                <DynoDictionarySkeleton className={classes.skeleton} />\r\n              ) : (\r\n                <>\r\n                  {list && list.length > 0 ? (\r\n                    <>\r\n                      {/* render list */}\r\n                      {list.map((item, index) => (\r\n                        <li className={classes.listItem} key={index}>\r\n                          <CommunicationPhraseItem {...item} />\r\n                        </li>\r\n                      ))}\r\n\r\n                      {/* infinite scrolling */}\r\n                      {!loading && more && (\r\n                        <InfiniteScroll\r\n                          onTouchAnchor={onLoadData}\r\n                          threshold={1}>\r\n                          <div className=\"w-100 t-center\">\r\n                            <LoopIcon className=\"ani-spin\" />\r\n                          </div>\r\n                        </InfiniteScroll>\r\n                      )}\r\n                    </>\r\n                  ) : (\r\n                    // empty list\r\n                    <h3 className=\"notfound-title h-100 flex-center t-center\">\r\n                      Không tìm thấy cụm từ nào trong từ điển\r\n                    </h3>\r\n                  )}\r\n                </>\r\n              )}\r\n            </>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nCommunicationPhrase.propTypes = {\r\n  isFirstLoad: PropTypes.bool,\r\n  list: PropTypes.array,\r\n  loading: PropTypes.bool,\r\n  more: PropTypes.bool,\r\n  onLoadData: PropTypes.func,\r\n  onSelectTopic: PropTypes.func,\r\n};\r\n\r\nCommunicationPhrase.defaultProps = {\r\n  more: false,\r\n  loading: false,\r\n  isFirstLoad: false,\r\n  list: [],\r\n  onLoadData: function () {},\r\n  onSelectTopic: function () {},\r\n};\r\n\r\nexport default CommunicationPhrase;\r\n","import sentenceApi from 'apis/sentenceApi';\r\nimport { equalArray } from 'helper';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport CommunicationPhrase from '.';\r\n\r\nconst perPage = 20;\r\n\r\nfunction CommunicationPhraseData() {\r\n  const [page, setPage] = useState(1);\r\n  const [loading, setLoading] = useState(true);\r\n  const [list, setList] = useState([]);\r\n  const [more, setMore] = useState(true); // toggle infinite scrolling\r\n  const [isFirstLoad, setIsFirstLoad] = useState(true);\r\n  const [topicList, setTopicList] = useState([]);\r\n  const totalPage = useRef(0);\r\n\r\n  const nextPage = () => {\r\n    if (page < totalPage.current) {\r\n      setPage(page + 1);\r\n    } else {\r\n      setMore(false);\r\n    }\r\n  };\r\n\r\n  const onSelectTopic = (topics) => {\r\n    if (!topics || !Array.isArray(topics) || equalArray(topics, topicList)) {\r\n      return;\r\n    }\r\n\r\n    setPage(1);\r\n    setMore(true);\r\n    setList([]);\r\n    setTopicList([...topics]);\r\n    totalPage.current = 0;\r\n  };\r\n\r\n  // get total sentence\r\n  useEffect(() => {\r\n    let isSub = true;\r\n\r\n    (async function () {\r\n      try {\r\n        const apiRes = await sentenceApi.getTotalSentences(topicList);\r\n\r\n        if (apiRes.status === 200 && isSub) {\r\n          const { total = 0 } = apiRes.data;\r\n          totalPage.current = Math.ceil(total / perPage);\r\n        }\r\n      } catch (error) {}\r\n    })();\r\n\r\n    return () => (isSub = false);\r\n  }, [topicList]);\r\n\r\n  // get sentence list\r\n  useEffect(() => {\r\n    let isSub = true;\r\n\r\n    (async function () {\r\n      try {\r\n        setLoading(true);\r\n        const apiRes = await sentenceApi.getSentenceList(\r\n          page,\r\n          perPage,\r\n          topicList,\r\n        );\r\n        if (apiRes.status === 200 && isSub) {\r\n          const { sentenceList = [] } = apiRes.data;\r\n          setList([...list, ...sentenceList]);\r\n        }\r\n      } catch (error) {\r\n      } finally {\r\n        if (isSub) {\r\n          setLoading(false);\r\n          isFirstLoad && setIsFirstLoad(false);\r\n        }\r\n      }\r\n    })();\r\n\r\n    return () => (isSub = false);\r\n  }, [page, topicList]);\r\n\r\n  return (\r\n    <CommunicationPhrase\r\n      list={list}\r\n      isFirstLoad={isFirstLoad}\r\n      loading={loading}\r\n      more={more}\r\n      onLoadData={nextPage}\r\n      onSelectTopic={(v) => onSelectTopic(v)}\r\n    />\r\n  );\r\n}\r\n\r\nexport default CommunicationPhraseData;\r\n","import CommunicationPhraseData from 'components/CommunicationPhrase/data';\r\nimport useTitle from 'hooks/useTitle';\r\nimport React from 'react';\r\n\r\nfunction CommunicationPhrasePage() {\r\n  useTitle('1000+ Cụm từ giao tiếp');\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <CommunicationPhraseData />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommunicationPhrasePage;\r\n"],"sourceRoot":""}